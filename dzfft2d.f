C
C     FFTE: A FAST FOURIER TRANSFORM PACKAGE
C
C     (C) COPYRIGHT SOFTWARE, 2000-2004, 2008-2011, ALL RIGHTS RESERVED
C                BY
C         DAISUKE TAKAHASHI
C         FACULTY OF ENGINEERING, INFORMATION AND SYSTEMS
C         UNIVERSITY OF TSUKUBA
C         1-1-1 TENNODAI, TSUKUBA, IBARAKI 305-8573, JAPAN
C         E-MAIL: daisuke@cs.tsukuba.ac.jp
C
C
C     2-D REAL-TO-COMPLEX FFT ROUTINE
C
C     FORTRAN77 SOURCE PROGRAM
C
C     CALL DZFFT2D(A,NX,NY,IOPT,B)
C
C     A(NX,NY) IS REAL INPUT VECTOR (REAL*8)
C     A(NX/2+1,NY) IS COMPLEX OUTPUT VECTOR (COMPLEX*16)
C     B(NX/2+1,NY) IS WORK VECTOR (COMPLEX*16)
C     NX IS THE LENGTH OF THE TRANSFORMS IN THE X-DIRECTION (INTEGER*4)
C     NY IS THE LENGTH OF THE TRANSFORMS IN THE Y-DIRECTION (INTEGER*4)
C       ------------------------------------
C         NX = (2**IP) * (3**IQ) * (5**IR)
C         NY = (2**JP) * (3**JQ) * (5**JR)
C       ------------------------------------
C     IOPT = 0 FOR INITIALIZING THE COEFFICIENTS (INTEGER*4)
C          = -1 FOR FORWARD TRANSFORM
C
C     WRITTEN BY DAISUKE TAKAHASHI
C
      SUBROUTINE DZFFT2D(A,NX,NY,IOPT,B)
      IMPLICIT REAL*8 (A-H,O-Z)
      INCLUDE 'param.h'
      COMPLEX*16 A(*),B(*)
      COMPLEX*16 C((NDA2+NP)*NBLK),D(NDA2)
      COMPLEX*16 WX(NDA2),WY(NDA2)
      DIMENSION LNX(3),LNY(3)
      SAVE WX,WY
C
      CALL FACTOR(NX,LNX)
      CALL FACTOR(NY,LNY)
C
      IF (IOPT .EQ. 0) THEN
        CALL SETTBL(WX,NX)
        CALL SETTBL(WY,NY)
        RETURN
      END IF
C
!$OMP PARALLEL PRIVATE(C,D)
      CALL DZFFT2D0(A,A,B,C,C,D,WX,WY,NX,NY,LNX,LNY)
!$OMP END PARALLEL
      RETURN
      END
      SUBROUTINE DZFFT2D0(DA,A,B,CX,CY,D,WX,WY,NX,NY,LNX,LNY)
      IMPLICIT REAL*8 (A-H,O-Z)
      INCLUDE 'param.h'
      COMPLEX*16 A(NX/2+1,*),B(NX/2+1,*)
      COMPLEX*16 CX(*),CY(NY+NP,*),D(*)
      COMPLEX*16 WX(*),WY(*)
      DIMENSION DA(NX,*)
      DIMENSION LNX(*),LNY(*)
C
      IF (MOD(NY,2) .EQ. 0) THEN
!$OMP DO
        DO 30 J=1,NY,2
          DO 10 I=1,NX
            CX(I)=DCMPLX(DA(I,J),DA(I,J+1))
   10     CONTINUE
          CALL FFT235(CX,D,WX,NX,LNX)
          B(1,J)=DBLE(CX(1))
          B(1,J+1)=DIMAG(CX(1))
!DIR$ VECTOR ALIGNED
          DO 20 I=2,NX/2+1
            B(I,J)=0.5D0*(CX(I)+DCONJG(CX(NX-I+2)))
            B(I,J+1)=(0.0D0,-0.5D0)*(CX(I)-DCONJG(CX(NX-I+2)))
   20     CONTINUE
   30   CONTINUE
      ELSE
!$OMP DO
        DO 60 J=1,NY-1,2
          DO 40 I=1,NX
            CX(I)=DCMPLX(DA(I,J),DA(I,J+1))
   40     CONTINUE
          CALL FFT235(CX,D,WX,NX,LNX)
          B(1,J)=DBLE(CX(1))
          B(1,J+1)=DIMAG(CX(1))
!DIR$ VECTOR ALIGNED
          DO 50 I=2,NX/2+1
            B(I,J)=0.5D0*(CX(I)+DCONJG(CX(NX-I+2)))
            B(I,J+1)=(0.0D0,-0.5D0)*(CX(I)-DCONJG(CX(NX-I+2)))
   50     CONTINUE
   60   CONTINUE
        DO 70 I=1,NX
          CX(I)=DCMPLX(DA(I,NY),0.0D0)
   70   CONTINUE
        CALL FFT235(CX,D,WX,NX,LNX)
!DIR$ VECTOR ALIGNED
        DO 80 I=1,NX/2+1
          B(I,NY)=CX(I)
   80   CONTINUE
      END IF
!$OMP DO
      DO 140 II=1,NX/2+1,NBLK
        DO 100 I=II,MIN0(II+NBLK-1,NX/2+1)
!DIR$ VECTOR ALIGNED
          DO 90 J=1,NY
            CY(J,I-II+1)=B(I,J)
   90     CONTINUE
  100   CONTINUE
        DO 110 I=II,MIN0(II+NBLK-1,NX/2+1)
          CALL FFT235(CY(1,I-II+1),D,WY,NY,LNY)
  110   CONTINUE
        DO 130 J=1,NY
!DIR$ VECTOR ALIGNED
          DO 120 I=II,MIN0(II+NBLK-1,NX/2+1)
            A(I,J)=CY(J,I-II+1)
  120     CONTINUE
  130   CONTINUE
  140 CONTINUE
      RETURN
      END
