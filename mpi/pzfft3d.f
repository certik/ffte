C
C     FFTE: A FAST FOURIER TRANSFORM PACKAGE
C
C     (C) COPYRIGHT SOFTWARE, 2000-2003, ALL RIGHTS RESERVED
C                BY
C         DAISUKE TAKAHASHI
C         INSTITURE OF INFORMATION SCIENCES AND ELECTRONICS,
C         UNIVERSITY OF TSUKUBA
C         1-1-1 TENNODAI, TSUKUBA, IBARAKI 305-8573, JAPAN
C         E-MAIL: daisuke@is.tsukuba.ac.jp
C
C
C     3-DIMENSIONAL COMPLEX FFT ROUTINE (MPI VERSION)
C
C     FORTRAN77 + MPI SOURCE PROGRAM
C
C     CALL PZFFT3D(A,B,NX,NY,NZ,ME,NPU,IOPT)
C
C     A(NX/NPU,NY,NZ) IS COMPLEX INPUT/OUTPUT VECTOR (COMPLEX*16)
C!HPF$ DISTRIBUTE A(CYCLIC,*,*)
C     B(NX*NY*NZ/NPU) IS WORK VECTOR (COMPLEX*16)
C     NX IS THE LENGTH OF THE TRANSFORMS IN THE X-DIRECTION (INTEGER*4)
C     NY IS THE LENGTH OF THE TRANSFORMS IN THE Y-DIRECTION (INTEGER*4)
C     NZ IS THE LENGTH OF THE TRANSFORMS IN THE Z-DIRECTION (INTEGER*4)
C       ------------------------------------
C         NX = (2**IP) * (3**IQ) * (5**IR)
C         NY = (2**JP) * (3**JQ) * (5**JR)
C         NZ = (2**KP) * (3**KQ) * (5**KR)
C       ------------------------------------
C     ME IS PROCESSOR NUMBER (INTEGER*4)
C     NPU IS THE NUMBER OF PROCESSORS (INTEGER*4)
C     IOPT = 1 FOR FORWARD TRANSFORM (INTEGER*4)
C          = 2 FOR INVERSE TRANSFORM
C
C     WRITTEN BY DAISUKE TAKAHASHI
C
      SUBROUTINE PZFFT3D(A,B,NX,NY,NZ,ME,NPU,IOPT)
      IMPLICIT REAL*8 (A-H,O-Z)
      INCLUDE 'param.h'
      COMPLEX*16 A(*),B(*)
      COMPLEX*16 C((NDA3+NP)*NBLK+NP),D(NDA3+NP)
      COMPLEX*16 WX(NDA3/2+NP),WY(NDA3/2+NP),WZ(NDA3/2+NP)
      DATA NX0,NY0,NZ0/0,0,0/
      SAVE NX0,NY0,NZ0,WX,WY,WZ
C
      IF (IOPT .EQ. 2) THEN
        NN=NX*NY*NZ/NPU
        DO 10 I=1,NN
          A(I)=DCONJG(A(I))
   10   CONTINUE
      END IF
C
      IF (NX .NE. NX0) THEN
        CALL SETTBL(WX,NX)
        NX0=NX
      END IF
      IF (NY .NE. NY0) THEN
        CALL SETTBL(WY,NY)
        NY0=NY
      END IF
      IF (NZ .NE. NZ0) THEN
        CALL SETTBL(WZ,NZ)
        NZ0=NZ
      END IF
!$OMP PARALLEL PRIVATE(C,D)
      CALL PZFFT3D0(A,A,B,B,C,C,D,WX,WY,WZ,NX,NY,NZ,NPU)
!$OMP END PARALLEL
      IF (IOPT .EQ. 2) THEN
        DN=1.0D0/DBLE(NX*NY*NZ)
        DO 20 I=1,NN
          A(I)=DCONJG(A(I))*DN
   20   CONTINUE
      END IF
      RETURN
      END
      SUBROUTINE PZFFT3D0(A,AX,B,BX,CY,CZ,D,WX,WY,WZ,NX,NY,NZ,NPU)
      IMPLICIT REAL*8 (A-H,O-Z)
      INCLUDE 'param.h'
      COMPLEX*16 A(NX/NPU,NY,*),AX(NX/NPU,NY,NZ/NPU,*)
      COMPLEX*16 B(NX,NY,*),BX(NX/NPU,NY,NZ/NPU,*)
      COMPLEX*16 CY(NY+NP,*),CZ(NZ+NP,*),D(*)
      COMPLEX*16 WX(*),WY(*),WZ(*)
      DIMENSION LNX(3),LNY(3),LNZ(3)
C
      CALL FACTOR(NX,LNX)
      CALL FACTOR(NY,LNY)
      CALL FACTOR(NZ,LNZ)
C
      NNX=NX/NPU
      NNZ=NZ/NPU
      NN=NX*NY*NZ/NPU
C
!$OMP DO
      DO 90 J=1,NY
        DO 80 II=1,NNX,NBLK
          DO 30 KK=1,NZ,NBLK
            DO 20 I=II,MIN0(II+NBLK-1,NNX)
              DO 10 K=KK,MIN0(KK+NBLK-1,NZ)
                CZ(K,I-II+1)=A(I,J,K)
   10         CONTINUE
   20       CONTINUE
   30     CONTINUE
          DO 40 I=II,MIN0(II+NBLK-1,NNX)
            CALL FFT23458(CZ(1,I-II+1),D,WZ,NZ,LNZ)
   40     CONTINUE
          DO 70 L=1,NPU
            DO 60 K=1,NNZ
              DO 50 I=II,MIN0(II+NBLK-1,NNX)
                BX(I,J,K,L)=CZ(L+(K-1)*NPU,I-II+1)
   50         CONTINUE
   60       CONTINUE
   70     CONTINUE
   80   CONTINUE
   90 CONTINUE
!$OMP SINGLE
      CALL PZTRANS(BX,AX,NN,NPU)
!$OMP END SINGLE
!$OMP DO
      DO 190 K=1,NNZ
        DO 170 L=1,NPU
          DO 160 II=1,NNX,NBLK
            DO 120 JJ=1,NY,NBLK
              DO 110 I=II,MIN0(II+NBLK-1,NNX)
                DO 100 J=JJ,MIN0(JJ+NBLK-1,NY)
                  CY(J,I-II+1)=AX(I,J,K,L)
  100           CONTINUE
  110         CONTINUE
  120       CONTINUE
            DO 130 I=II,MIN0(II+NBLK-1,NNX)
              CALL FFT23458(CY(1,I-II+1),D,WY,NY,LNY)
  130       CONTINUE
            DO 150 J=1,NY
              DO 140 I=II,MIN0(II+NBLK-1,NNX)
                B(L+(I-1)*NPU,J,K)=CY(J,I-II+1)
  140         CONTINUE
  150       CONTINUE
  160     CONTINUE
  170   CONTINUE
        DO 180 J=1,NY
          CALL FFT23458(B(1,J,K),D,WX,NX,LNX)
  180   CONTINUE
  190 CONTINUE
!$OMP DO
      DO 260 L=1,NPU
        DO 250 KK=1,NNZ,NBLK
          DO 240 JJ=1,NY,NBLK
            DO 230 II=1,NNX,NBLK
              DO 220 K=KK,MIN0(KK+NBLK-1,NNZ)
                DO 210 J=JJ,MIN0(JJ+NBLK-1,NY)
                  DO 200 I=II,MIN0(II+NBLK-1,NNX)
                    AX(I,J,K,L)=B(L+(I-1)*NPU,J,K)
  200             CONTINUE
  210           CONTINUE
  220         CONTINUE
  230       CONTINUE
  240     CONTINUE
  250   CONTINUE
  260 CONTINUE
!$OMP SINGLE
      CALL PZTRANS(AX,BX,NN,NPU)
!$OMP END SINGLE
!$OMP DO
      DO 330 L=1,NPU
        DO 320 KK=1,NNZ,NBLK
          DO 310 JJ=1,NY,NBLK
            DO 300 II=1,NNX,NBLK
              DO 290 K=KK,MIN0(KK+NBLK-1,NNZ)
                DO 280 J=JJ,MIN0(JJ+NBLK-1,NY)
                  DO 270 I=II,MIN0(II+NBLK-1,NNX)
                    A(I,J,L+(K-1)*NPU)=BX(I,J,K,L)
  270             CONTINUE
  280           CONTINUE
  290         CONTINUE
  300       CONTINUE
  310     CONTINUE
  320   CONTINUE
  330 CONTINUE
      RETURN
      END
