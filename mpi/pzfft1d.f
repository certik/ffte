C
C     FFTE: A FAST FOURIER TRANSFORM PACKAGE
C
C     (C) COPYRIGHT SOFTWARE, 2000-2004, ALL RIGHTS RESERVED
C                BY
C         DAISUKE TAKAHASHI
C         GRADUATE SCHOOL OF SYSTEMS AND INFORMATION ENGINEERING
C         UNIVERSITY OF TSUKUBA
C         1-1-1 TENNODAI, TSUKUBA, IBARAKI 305-8573, JAPAN
C         E-MAIL: daisuke@cs.tsukuba.ac.jp
C
C
C     PARALLEL 1-D COMPLEX FFT ROUTINE
C
C     FORTRAN77 + MPI SOURCE PROGRAM
C
C     CALL PZFFT1D(A,B,W,N,ICOMM,ME,NPU,IOPT)
C
C     W((N/NPU)*3/2) IS SINE/COSINE TABLE (COMPLEX*16)
C     N IS THE LENGTH OF THE TRANSFORMS (INTEGER*8)
C       -----------------------------------
C         N = (2**IP) * (3**IQ) * (5**IR)
C       -----------------------------------
C     ICOMM IS THE COMMUNICATOR (INTEGER*4)
C     ME IS THE RANK (INTEGER*4)
C     NPU IS THE NUMBER OF PROCESSORS (INTEGER*4)
C     IOPT = 0 FOR INITIALIZING THE COEFFICIENTS (INTEGER*4)
C     IOPT = -1 FOR FORWARD TRANSFORM WHERE
C              A(N/NPU) IS COMPLEX INPUT VECTOR (COMPLEX*16)
C!HPF$ DISTRIBUTE A(BLOCK)
C              B(N/NPU) IS COMPLEX OUTPUT VECTOR (COMPLEX*16)
C!HPF$ DISTRIBUTE B(BLOCK)
C     IOPT = +1 FOR INVERSE TRANSFORM WHERE
C              A(N/NPU) IS COMPLEX INPUT VECTOR (COMPLEX*16)
C!HPF$ DISTRIBUTE A(BLOCK)
C              B(N/NPU) IS COMPLEX OUTPUT VECTOR (COMPLEX*16)
C!HPF$ DISTRIBUTE B(BLOCK)
C     IOPT = -2 FOR FORWARD TRANSFORM WHERE
C              A(N/NPU) IS COMPLEX INPUT VECTOR (COMPLEX*16)
C!HPF$ DISTRIBUTE A(BLOCK)
C              B(N/NPU) IS COMPLEX OUTPUT VECTOR (COMPLEX*16)
C!HPF$ DISTRIBUTE B(CYCLIC)
C     IOPT = +2 FOR INVERSE TRANSFORM WHERE
C              A(N/NPU) IS COMPLEX INPUT VECTOR (COMPLEX*16)
C!HPF$ DISTRIBUTE A(CYCLIC)
C              B(N/NPU) IS COMPLEX OUTPUT VECTOR (COMPLEX*16)
C!HPF$ DISTRIBUTE B(BLOCK)
C
C     WRITTEN BY DAISUKE TAKAHASHI
C
      SUBROUTINE PZFFT1D(A,B,W,N,ICOMM,ME,NPU,IOPT)
      IMPLICIT REAL*8 (A-H,O-Z)
      INCLUDE 'param.h'
      COMPLEX*16 A(*),B(*),W(*)
      COMPLEX*16 C((NDA3+NP)*(NBLK+1)+NP)
      COMPLEX*16 WX(NDA3/2+NP),WY(NDA3/2+NP),WZ(NDA3/2+NP)
      DIMENSION IP(3),LNX(3),LNY(3),LNZ(3),LNPU(3)
      INTEGER*8 N,NN
      SAVE WX,WY,WZ
C
      NN=N/INT8(NPU)
      NN2=NN/NPU
      CALL FACTOR(NPU,LNPU)
      CALL FACTOR8(N,IP)
      DO 10 I=1,3
        LNZ(I)=MAX0(LNPU(I),(IP(I)+1)/3)
        LNX(I)=MAX0(LNPU(I),(IP(I)-LNZ(I)+1)/2)
        LNY(I)=IP(I)-LNX(I)-LNZ(I)
   10 CONTINUE
      NX=(2**LNX(1))*(3**LNX(2))*(5**LNX(3))
      NY=(2**LNY(1))*(3**LNY(2))*(5**LNY(3))
      NZ=(2**LNZ(1))*(3**LNZ(2))*(5**LNZ(3))
C
      IF (IOPT .EQ. 0) THEN
        CALL SETTBL(WX,NX)
        CALL SETTBL(WY,NY)
        CALL SETTBL(WZ,NZ)
        CALL PSETTBL2(W,NY,NZ,ME,NPU)
        CALL PSETTBL3(W(NY*(NZ/NPU)+1),NX,NY,NZ,ME,NPU)
        RETURN
      END IF
C
      IF (IOPT .EQ. 1 .OR. IOPT .EQ. 2) THEN
        DO 20 I=1,NN
          A(I)=DCONJG(A(I))
   20   CONTINUE
      END IF
C
      IF (IOPT .EQ. -1 .OR. IOPT .EQ. 1 .OR. IOPT .EQ. -2) THEN
        CALL ZTRANS(A,B,NPU,NN2)
        CALL PZTRANS(B,A,NN,ICOMM,NPU)
      END IF
C
      ND=(MAX0(NY,NZ)+NP)*NBLK+NP
!$OMP PARALLEL PRIVATE(C)
      CALL PZFFT1D0(A,A,A,A,B,B,B,C,C,C(ND+1),WX,WY,WZ,W,
     1              W(NY*(NZ/NPU)+1),NX,NY,NZ,ICOMM,NPU)
!$OMP END PARALLEL
C
      IF (IOPT .EQ. -1 .OR. IOPT .EQ. 1 .OR. IOPT .EQ. 2) THEN
        CALL PZTRANS(B,A,NN,ICOMM,NPU)
        CALL ZTRANS(A,B,NN2,NPU)
      END IF
C
      IF (IOPT .EQ. 1 .OR. IOPT .EQ. 2) THEN
        DN=1.0D0/DBLE(N)
        DO 30 I=1,NN
          B(I)=DCONJG(B(I))*DN
   30   CONTINUE
      END IF
      RETURN
      END
      SUBROUTINE PZFFT1D0(A,A2,APXYZ,AXYZP,B,BXYZP,BZYX,CY,CZ,D,
     1                    WX,WY,WZ,WW,WWW,NX,NY,NZ,ICOMM,NPU)
      IMPLICIT REAL*8 (A-H,O-Z)
      INCLUDE 'param.h'
      COMPLEX*16 A(NX,NY,*),A2(NX/NPU,NY,*),APXYZ(NPU,NX/NPU,NY,*),
     1           AXYZP(NX/NPU,NY,NZ/NPU,*)
      COMPLEX*16 B(NX,NY,*),BXYZP(NX/NPU,NY,NZ/NPU,*),BZYX(NZ/NPU,NY,*)
      COMPLEX*16 CY(NY+NP,*),CZ(NZ+NP,*),D(*)
      COMPLEX*16 WX(*),WY(*),WZ(*),WW(NY,*),WWW(NPU,NX/NPU,NY,*)
      DIMENSION LNX(3),LNY(3),LNZ(3)
      INTEGER*8 NN
C
      CALL FACTOR(NX,LNX)
      CALL FACTOR(NY,LNY)
      CALL FACTOR(NZ,LNZ)
C
      NNX=NX/NPU
      NNZ=NZ/NPU
      NN=INT8(NX)*INT8(NY)*INT8(NZ)/INT8(NPU)
C
!$OMP DO
      DO 90 J=1,NY
        DO 80 II=1,NNX,NBLK
          DO 30 KK=1,NZ,NBLK
            DO 20 I=II,MIN0(II+NBLK-1,NNX)
              DO 10 K=KK,MIN0(KK+NBLK-1,NZ)
                CZ(K,I-II+1)=A2(I,J,K)
   10         CONTINUE
   20       CONTINUE
   30     CONTINUE
          DO 40 I=II,MIN0(II+NBLK-1,NNX)
            CALL FFT235(CZ(1,I-II+1),D,WZ,NZ,LNZ)
   40     CONTINUE
          DO 70 L=1,NPU
            DO 60 K=1,NNZ
              DO 50 I=II,MIN0(II+NBLK-1,NNX)
                AXYZP(I,J,K,L)=CZ(L+(K-1)*NPU,I-II+1)
   50         CONTINUE
   60       CONTINUE
   70     CONTINUE
   80   CONTINUE
   90 CONTINUE
!$OMP SINGLE
      CALL PZTRANS(A,B,NN,ICOMM,NPU)
!$OMP END SINGLE
!$OMP DO
      DO 190 K=1,NNZ
        DO 170 L=1,NPU
          DO 160 II=1,NNX,NBLK
            DO 120 JJ=1,NY,NBLK
              DO 110 I=II,MIN0(II+NBLK-1,NNX)
                DO 100 J=JJ,MIN0(JJ+NBLK-1,NY)
                  CY(J,I-II+1)=BXYZP(I,J,K,L)*WW(J,K)
  100           CONTINUE
  110         CONTINUE
  120       CONTINUE
            DO 130 I=II,MIN0(II+NBLK-1,NNX)
              CALL FFT235(CY(1,I-II+1),D,WY,NY,LNY)
  130       CONTINUE
            DO 150 J=1,NY
              DO 140 I=II,MIN0(II+NBLK-1,NNX)
                APXYZ(L,I,J,K)=CY(J,I-II+1)*WWW(L,I,J,K)
  140         CONTINUE
  150       CONTINUE
  160     CONTINUE
  170   CONTINUE
        DO 180 J=1,NY
          CALL FFT235(A(1,J,K),D,WX,NX,LNX)
  180   CONTINUE
  190 CONTINUE
!$OMP DO
      DO 250 II=1,NX,NBLK
        DO 240 JJ=1,NY,NBLK
          DO 230 KK=1,NNZ,NBLK
            DO 220 I=II,MIN0(II+NBLK-1,NX)
              DO 210 J=JJ,MIN0(JJ+NBLK-1,NY)
                DO 200 K=KK,MIN0(KK+NBLK-1,NNZ)
                  BZYX(K,J,I)=A(I,J,K)
  200           CONTINUE
  210         CONTINUE
  220       CONTINUE
  230     CONTINUE
  240   CONTINUE
  250 CONTINUE
      RETURN
      END
      SUBROUTINE PSETTBL2(W,NY,NZ,ME,NPU)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION W(2,NY,*)
C
      PI2=8.0D0*DATAN(1.0D0)
      PX=-PI2/(DBLE(NY)*DBLE(NZ))
!$OMP PARALLEL DO
      DO 20 K=1,NZ/NPU
!DIR$ VECTOR ALIGNED
        DO 10 J=1,NY
          W(1,J,K)=DCOS(PX*DBLE(J-1)*(DBLE(ME)+DBLE(K-1)*DBLE(NPU)))
          W(2,J,K)=DSIN(PX*DBLE(J-1)*(DBLE(ME)+DBLE(K-1)*DBLE(NPU)))
   10   CONTINUE
   20 CONTINUE
!$OMP END PARALLEL DO
      RETURN
      END
      SUBROUTINE PSETTBL3(W,NX,NY,NZ,ME,NPU)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION W(2,NX,NY,*)
C
      PI2=8.0D0*DATAN(1.0D0)
      PX=-PI2/(DBLE(NX)*DBLE(NY)*DBLE(NZ))
!$OMP PARALLEL DO
      DO 30 K=1,NZ/NPU
        DO 20 J=1,NY
!DIR$ VECTOR ALIGNED
          DO 10 I=1,NX
            W(1,I,J,K)=DCOS(PX*DBLE(I-1)*(DBLE(ME)+DBLE(K-1)*DBLE(NPU)
     1                                    +DBLE(J-1)*DBLE(NZ)))
            W(2,I,J,K)=DSIN(PX*DBLE(I-1)*(DBLE(ME)+DBLE(K-1)*DBLE(NPU)
     1                                    +DBLE(J-1)*DBLE(NZ)))
   10     CONTINUE
   20   CONTINUE
   30 CONTINUE
!$OMP END PARALLEL DO
      RETURN
      END
      SUBROUTINE ZTRANS(A,B,N1,N2)
      IMPLICIT REAL*8 (A-H,O-Z)
      INCLUDE 'param.h'
      COMPLEX*16 A(N1,*),B(N2,*)
C
!$OMP PARALLEL DO
      DO 40 II=1,N1,NBLK
        DO 30 JJ=1,N2,NBLK
          DO 20 I=II,MIN(II+NBLK-1,N1)
            DO 10 J=JJ,MIN(JJ+NBLK-1,N2)
              B(J,I)=A(I,J)
   10       CONTINUE
   20     CONTINUE
   30   CONTINUE
   40 CONTINUE
!$OMP END PARALLEL DO
      RETURN
      END
