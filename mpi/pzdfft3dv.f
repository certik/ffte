C
C     FFTE: A FAST FOURIER TRANSFORM PACKAGE
C
C     (C) COPYRIGHT SOFTWARE, 2000-2004, 2008-2014, 2020
C         ALL RIGHTS RESERVED
C                BY
C         DAISUKE TAKAHASHI
C         CENTER FOR COMPUTATIONAL SCIENCES
C         UNIVERSITY OF TSUKUBA
C         1-1-1 TENNODAI, TSUKUBA, IBARAKI 305-8577, JAPAN
C         E-MAIL: daisuke@cs.tsukuba.ac.jp
C
C
C     PARALLEL 3-D COMPLEX-TO-REAL FFT ROUTINE (WITH 2-D DECOMPOSITION)
C
C     FORTRAN77 + MPI SOURCE PROGRAM
C
C     CALL PZDFFT3DV(A,B,NX,NY,NZ,ICOMMY,ICOMMZ,MEY,NPUY,NPUZ,IOPT)
C
C     NX IS THE LENGTH OF THE TRANSFORMS IN THE X-DIRECTION (INTEGER*4)
C     NY IS THE LENGTH OF THE TRANSFORMS IN THE Y-DIRECTION (INTEGER*4)
C     NZ IS THE LENGTH OF THE TRANSFORMS IN THE Z-DIRECTION (INTEGER*4)
C       ------------------------------------
C         NX = (2**IP) * (3**IQ) * (5**IR)
C         NY = (2**JP) * (3**JQ) * (5**JR)
C         NZ = (2**KP) * (3**KQ) * (5**KR)
C       ------------------------------------
C     ICOMMY IS THE COMMUNICATOR IN THE Y-DIRECTION (INTEGER*4)
C     ICOMMZ IS THE COMMUNICATOR IN THE Z-DIRECTION (INTEGER*4)
C     MEY IS THE RANK IN THE Y-DIRECTION (INTEGER*4)
C     NPUY IS THE NUMBER OF PROCESSORS IN THE Y-DIRECTION (INTEGER*4)
C     NPUZ IS THE NUMBER OF PROCESSORS IN THE Z-DIRECTION (INTEGER*4)
C     IOPT = 0 FOR INITIALIZING THE COEFFICIENTS (INTEGER*4)
C     IOPT = +1 FOR INVERSE TRANSFORM WHERE
C              A(NX/2+1,NY/NPUY,NZ/NPUZ) IS COMPLEX INPUT VECTOR
C                                           (COMPLEX*16)
C!HPF$ DISTRIBUTE A(*,BLOCK,BLOCK)
C              A(NX,NY/NPUY,NZ/NPUZ) IS REAL OUTPUT VECTOR (REAL*8)
C!HPF$ DISTRIBUTE A(*,BLOCK,BLOCK)
C              B(NX/2+1,NY/NPUY,NZ/NPUZ) IS WORK VECTOR (COMPLEX*16)
C!HPF$ DISTRIBUTE B(*,BLOCK,BLOCK)
C     IOPT = +2 FOR INVERSE TRANSFORM WHERE
C     MEY = 0  A((NX/2)/NPUY+1,NY/NPUZ,NZ) IS COMPLEX INPUT VECTOR
C                                             (COMPLEX*16)
C     MEY > 0  A((NX/2)/NPUY,NY/NPUZ,NZ) IS COMPLEX INPUT VECTOR
C                                           (COMPLEX*16)
C!HPF$ DISTRIBUTE A(BLOCK,BLOCK,*)
C              A(NX,NY/NPUY,NZ/NPUZ) IS REAL OUTPUT VECTOR (REAL*8)
C!HPF$ DISTRIBUTE A(*,BLOCK,BLOCK)
C              B(NX/2+1,NY/NPUY,NZ/NPUZ) IS WORK VECTOR (COMPLEX*16)
C!HPF$ DISTRIBUTE B(*,BLOCK,BLOCK)
C
C     WRITTEN BY DAISUKE TAKAHASHI
C
      SUBROUTINE PZDFFT3DV(A,B,NX,NY,NZ,ICOMMY,ICOMMZ,MEY,NPUY,NPUZ,
     1                     IOPT)
      IMPLICIT REAL*8 (A-H,O-Z)
      INCLUDE 'param.h'
      COMPLEX*16 A(*),B(*)
      COMPLEX*16 C(NDA3),D(NDA3)
      COMPLEX*16 WX(NDA3),WY(NDA3),WZ(NDA3)
      DIMENSION LNX(3),LNY(3),LNZ(3)
      SAVE WX,WY,WZ
C
      IF (IOPT .EQ. 0) THEN
        CALL SETTBL(WX,NX)
        CALL SETTBL(WY,NY)
        CALL SETTBL(WZ,NZ)
        RETURN
      END IF
C
      CALL FACTOR(NX,LNX)
      CALL FACTOR(NY,LNY)
      CALL FACTOR(NZ,LNZ)
C
!$OMP PARALLEL PRIVATE(C,D)
      CALL PZDFFT3DV0(A,A,A,A,A,A,A,B,B,B,B,B,B,C,D,WX,WY,WZ,NX,NY,NZ,
     1                LNX,LNY,LNZ,ICOMMY,ICOMMZ,MEY,NPUY,NPUZ,IOPT)
!$OMP END PARALLEL
      RETURN
      END
      SUBROUTINE PZDFFT3DV0(A,AXYZ,AYPZX,AYZX,AYZX2,AZXYP,DA,B,BXYZ,
     1                      BXYZ2,BYZXP,BZPXY,BZXY,C,D,WX,WY,WZ,NX,NY,
     2                      NZ,LNX,LNY,LNZ,ICOMMY,ICOMMZ,MEY,NPUY,NPUZ,
     3                      IOPT)
      IMPLICIT REAL*8 (A-H,O-Z)
      INCLUDE 'mpif.h'
      INCLUDE 'param.h'
      COMPLEX*16 A(*),AXYZ(NX/2+1,NY/NPUY,*),AYPZX(NY/NPUY,NPUY,*),
     1           AYZX(NY,*),AYZX2((NY/NPUY)*(NZ/NPUZ),*),
     2           AZXYP(NZ/NPUZ,*)
      COMPLEX*16 B(*),BXYZ(NX/2+1,NY/NPUY,*),BXYZ2(NX/2+1,*),
     1           BYZXP(NY/NPUY,*),BZPXY(NZ/NPUZ,NPUZ,*),BZXY(NZ,*)
      COMPLEX*16 C(*),D(*)
      COMPLEX*16 WX(*),WY(*),WZ(*)
      COMPLEX*16 TEMP
      DIMENSION DA(NX,NY/NPUY,*)
      DIMENSION ISCNT(MAXNPU),ISDSP(MAXNPU),IRCNT(MAXNPU),IRDSP(MAXNPU)
      DIMENSION LNX(*),LNY(*),LNZ(*)
C
      DN=1.0D0/(DBLE(NX)*DBLE(NY)*DBLE(NZ))
C
      NNXY=NX/NPUY
      NNYY=NY/NPUY
      NNYZ=NY/NPUZ
      NNZZ=NZ/NPUZ
C
      ISCNT(1)=NNYY*NNZZ*(NNXY/2+1)
      ISDSP(1)=0
      DO 10 I=2,NPUY
        ISCNT(I)=NNYY*NNZZ*(NNXY/2)
        ISDSP(I)=ISDSP(I-1)+ISCNT(I-1)
   10 CONTINUE
      IF (MEY .EQ. 0) THEN
        IRCNT(1)=NNYY*NNZZ*(NNXY/2+1)
        IRDSP(1)=0
        DO 20 I=2,NPUY
          IRCNT(I)=NNYY*NNZZ*(NNXY/2+1)
          IRDSP(I)=IRDSP(I-1)+IRCNT(I-1)
   20   CONTINUE
      ELSE
        IRCNT(1)=NNYY*NNZZ*(NNXY/2)
        IRDSP(1)=0
        DO 30 I=2,NPUY
          IRCNT(I)=NNYY*NNZZ*(NNXY/2)
          IRDSP(I)=IRDSP(I-1)+IRCNT(I-1)
   30   CONTINUE
      END IF
C
      IF (IOPT .EQ. 1) THEN
!$OMP DO COLLAPSE(2) PRIVATE(I,K)
        DO 60 J=1,NNYY
          DO 50 K=1,NNZZ
!DIR$ VECTOR ALIGNED
            DO 40 I=1,NNXY/2+1
              B(I+(K-1)*(NNXY/2+1)+(J-1)*(NNXY/2+1)*NNZZ)=AXYZ(I,J,K)
   40       CONTINUE
   50     CONTINUE
   60   CONTINUE
!$OMP DO COLLAPSE(2) PRIVATE(I,J,K)
        DO 100 L=2,NPUY
          DO 90 J=1,NNYY
            DO 80 K=1,NNZZ
!DIR$ VECTOR ALIGNED
              DO 70 I=1,NNXY/2
                B(I+(K-1)*(NNXY/2)+(J-1)*(NNXY/2)*NNZZ
     1            +((L-1)*(NNXY/2)+1)*NNZZ*NNYY)
     2         =AXYZ(I+(L-1)*(NNXY/2)+1,J,K)
   70         CONTINUE
   80       CONTINUE
   90     CONTINUE
  100   CONTINUE
!$OMP BARRIER
!$OMP MASTER
        CALL MPI_ALLTOALLV(B,ISCNT,ISDSP,MPI_DOUBLE_COMPLEX,A,IRCNT,
     1                     IRDSP,MPI_DOUBLE_COMPLEX,ICOMMY,IERR)
!$OMP END MASTER
!$OMP BARRIER
        IF (MEY .EQ. 0) THEN
!$OMP DO COLLAPSE(2) PRIVATE(I,J,K)
          DO 140 L=1,NPUZ
            DO 130 K=1,NNZZ
              DO 120 J=1,NNYZ
!DIR$ VECTOR ALIGNED
                DO 110 I=1,NNXY/2+1
                  B(I+(J-1)*(NNXY/2+1)+(K-1)*(NNXY/2+1)*NNYZ
     1              +(L-1)*(NNXY/2+1)*NNYZ*NNZZ)
     2           =A(I+(K-1)*(NNXY/2+1)+(J-1)*(NNXY/2+1)*NNZZ
     3              +(L-1)*(NNXY/2+1)*NNZZ*NNYZ)
  110           CONTINUE
  120         CONTINUE
  130       CONTINUE
  140     CONTINUE
        ELSE
!$OMP DO COLLAPSE(2) PRIVATE(I,J,K)
          DO 180 L=1,NPUZ
            DO 170 K=1,NNZZ
              DO 160 J=1,NNYZ
!DIR$ VECTOR ALIGNED
                DO 150 I=1,NNXY/2
                  B(I+(J-1)*(NNXY/2)+(K-1)*(NNXY/2)*NNYZ
     1              +(L-1)*(NNXY/2)*NNYZ*NNZZ)
     2           =A(I+(K-1)*(NNXY/2)+(J-1)*(NNXY/2)*NNZZ
     3              +(L-1)*(NNXY/2)*NNZZ*NNYZ)
  150           CONTINUE
  160         CONTINUE
  170       CONTINUE
  180     CONTINUE
        END IF
        IF (MEY .EQ. 0) THEN
!$OMP BARRIER
!$OMP MASTER
          CALL MPI_ALLTOALL(B,(NNXY/2+1)*NNYZ*NNZZ,MPI_DOUBLE_COMPLEX,A,
     1                      (NNXY/2+1)*NNYZ*NNZZ,MPI_DOUBLE_COMPLEX,
     2                      ICOMMZ,IERR)
!$OMP END MASTER
!$OMP BARRIER
        ELSE
!$OMP BARRIER
!$OMP MASTER
          CALL MPI_ALLTOALL(B,(NNXY/2)*NNYZ*NNZZ,MPI_DOUBLE_COMPLEX,A,
     1                      (NNXY/2)*NNYZ*NNZZ,MPI_DOUBLE_COMPLEX,
     2                      ICOMMZ,IERR)
!$OMP END MASTER
!$OMP BARRIER
        END IF
      END IF
      IF (MEY .EQ. 0) THEN
!$OMP DO COLLAPSE(2) PRIVATE(I,K,KK)
        DO 220 II=1,(NNXY/2+1)*NNYZ,NBLK
          DO 210 KK=1,NZ,NBLK
            DO 200 I=II,MIN0(II+NBLK-1,(NNXY/2+1)*NNYZ)
!DIR$ VECTOR ALIGNED
              DO 190 K=KK,MIN0(KK+NBLK-1,NZ)
                BZXY(K,I)=DCONJG(A(I+(K-1)*(NNXY/2+1)*NNYZ))
  190         CONTINUE
  200       CONTINUE
  210     CONTINUE
  220   CONTINUE
!$OMP DO PRIVATE(K,L)
        DO 250 I=1,(NNXY/2+1)*NNYZ
          CALL FFT235(BZXY(1,I),C,WZ,NZ,LNZ)
          DO 240 L=1,NPUZ
!DIR$ VECTOR ALIGNED
            DO 230 K=1,NNZZ
              AZXYP(K,I+(L-1)*(NNXY/2+1)*NNYZ)=BZPXY(K,L,I)
  230       CONTINUE
  240     CONTINUE
  250   CONTINUE
      ELSE
!$OMP DO COLLAPSE(2) PRIVATE(I,K,KK)
        DO 290 II=1,(NNXY/2)*NNYZ,NBLK
          DO 280 KK=1,NZ,NBLK
            DO 270 I=II,MIN0(II+NBLK-1,(NNXY/2)*NNYZ)
!DIR$ VECTOR ALIGNED
              DO 260 K=KK,MIN0(KK+NBLK-1,NZ)
                BZXY(K,I)=DCONJG(A(I+(K-1)*(NNXY/2)*NNYZ))
  260         CONTINUE
  270       CONTINUE
  280     CONTINUE
  290   CONTINUE
!$OMP DO PRIVATE(K,L)
        DO 320 I=1,(NNXY/2)*NNYZ
          CALL FFT235(BZXY(1,I),C,WZ,NZ,LNZ)
          DO 310 L=1,NPUZ
!DIR$ VECTOR ALIGNED
            DO 300 K=1,NNZZ
              AZXYP(K,I+(L-1)*(NNXY/2)*NNYZ)=BZPXY(K,L,I)
  300       CONTINUE
  310     CONTINUE
  320   CONTINUE
      END IF
      IF (MEY .EQ. 0) THEN
!$OMP BARRIER
!$OMP MASTER
        CALL MPI_ALLTOALL(AZXYP,NNZZ*(NNXY/2+1)*NNYZ,MPI_DOUBLE_COMPLEX,
     1                    B,NNZZ*(NNXY/2+1)*NNYZ,MPI_DOUBLE_COMPLEX,
     2                    ICOMMZ,IERR)
!$OMP END MASTER
!$OMP BARRIER
      ELSE
!$OMP BARRIER
!$OMP MASTER
        CALL MPI_ALLTOALL(AZXYP,NNZZ*(NNXY/2)*NNYZ,MPI_DOUBLE_COMPLEX,B,
     1                    NNZZ*(NNXY/2)*NNYZ,MPI_DOUBLE_COMPLEX,ICOMMZ,
     2                    IERR)
!$OMP END MASTER
!$OMP BARRIER
      END IF
      IF (MEY .EQ. 0) THEN
!$OMP DO COLLAPSE(2) PRIVATE(J,JJ,K)
        DO 360 KK=1,NNZZ*(NNXY/2+1),NBLK
          DO 350 JJ=1,NY,NBLK
            DO 340 K=KK,MIN0(KK+NBLK-1,NNZZ*(NNXY/2+1))
!DIR$ VECTOR ALIGNED
              DO 330 J=JJ,MIN0(JJ+NBLK-1,NY)
                AYZX(J,K)=B(K+(J-1)*NNZZ*(NNXY/2+1))
  330         CONTINUE
  340       CONTINUE
  350     CONTINUE
  360   CONTINUE
!$OMP DO PRIVATE(J,L)
        DO 390 K=1,NNZZ*(NNXY/2+1)
          CALL FFT235(AYZX(1,K),C,WY,NY,LNY)
          DO 380 L=1,NPUY
!DIR$ VECTOR ALIGNED
            DO 370 J=1,NNYY
              BYZXP(J,K+(L-1)*NNZZ*(NNXY/2+1))=AYPZX(J,L,K)
  370       CONTINUE
  380     CONTINUE
  390   CONTINUE
      ELSE
!$OMP DO COLLAPSE(2) PRIVATE(J,JJ,K)
        DO 430 KK=1,NNZZ*(NNXY/2),NBLK
          DO 420 JJ=1,NY,NBLK
            DO 410 K=KK,MIN0(KK+NBLK-1,NNZZ*(NNXY/2))
!DIR$ VECTOR ALIGNED
              DO 400 J=JJ,MIN0(JJ+NBLK-1,NY)
                AYZX(J,K)=B(K+(J-1)*NNZZ*(NNXY/2))
  400         CONTINUE
  410       CONTINUE
  420     CONTINUE
  430   CONTINUE
!$OMP DO PRIVATE(J,L)
        DO 460 K=1,NNZZ*(NNXY/2)
          CALL FFT235(AYZX(1,K),C,WY,NY,LNY)
          DO 450 L=1,NPUY
!DIR$ VECTOR ALIGNED
            DO 440 J=1,NNYY
              BYZXP(J,K+(L-1)*NNZZ*(NNXY/2))=AYPZX(J,L,K)
  440       CONTINUE
  450     CONTINUE
  460   CONTINUE
      END IF
!$OMP BARRIER
!$OMP MASTER
      CALL MPI_ALLTOALLV(BYZXP,IRCNT,IRDSP,MPI_DOUBLE_COMPLEX,AYZX2,
     1                   ISCNT,ISDSP,MPI_DOUBLE_COMPLEX,ICOMMY,IERR)
!$OMP END MASTER
!$OMP BARRIER
!$OMP DO COLLAPSE(2) PRIVATE(I,II,J)
      DO 500 JJ=1,NNYY*NNZZ,NBLK
        DO 490 II=1,NX/2+1,NBLK
          DO 480 J=JJ,MIN0(JJ+NBLK-1,NNYY*NNZZ)
!DIR$ VECTOR ALIGNED
            DO 470 I=II,MIN0(II+NBLK-1,NX/2+1)
              BXYZ2(I,J)=AYZX2(J,I)
  470       CONTINUE
  480     CONTINUE
  490   CONTINUE
  500 CONTINUE
      IF (MOD(NNYY,2) .EQ. 0) THEN
!$OMP DO COLLAPSE(2) PRIVATE(I,J,TEMP)
        DO 540 K=1,NNZZ
          DO 530 J=1,NNYY,2
            C(1)=DCMPLX(DBLE(BXYZ(1,J,K)),DBLE(BXYZ(1,J+1,K)))
!DIR$ VECTOR ALIGNED
            DO 510 I=2,NX/2+1
              TEMP=(0.0D0,1.0D0)*BXYZ(I,J+1,K)
              C(I)=BXYZ(I,J,K)+TEMP
              C(NX-I+2)=DCONJG(BXYZ(I,J,K)-TEMP)
  510       CONTINUE
            CALL FFT235(C,D,WX,NX,LNX)
!DIR$ VECTOR ALIGNED
            DO 520 I=1,NX
              DA(I,J,K)=DBLE(C(I))*DN
              DA(I,J+1,K)=DIMAG(C(I))*DN
  520       CONTINUE
  530     CONTINUE
  540   CONTINUE
      ELSE
!$OMP DO COLLAPSE(2) PRIVATE(I,J,TEMP)
        DO 580 K=1,NNZZ
          DO 570 J=1,NNYY-1,2
            C(1)=DCMPLX(DBLE(BXYZ(1,J,K)),DBLE(BXYZ(1,J+1,K)))
!DIR$ VECTOR ALIGNED
            DO 550 I=2,NX/2+1
              TEMP=(0.0D0,1.0D0)*BXYZ(I,J+1,K)
              C(I)=BXYZ(I,J,K)+TEMP
              C(NX-I+2)=DCONJG(BXYZ(I,J,K)-TEMP)
  550       CONTINUE
            CALL FFT235(C,D,WX,NX,LNX)
!DIR$ VECTOR ALIGNED
            DO 560 I=1,NX
              DA(I,J,K)=DBLE(C(I))*DN
              DA(I,J+1,K)=DIMAG(C(I))*DN
  560       CONTINUE
  570     CONTINUE
  580   CONTINUE
!$OMP DO PRIVATE(I)
        DO 610 K=1,NNZZ
          C(1)=DCMPLX(DBLE(BXYZ(1,J,K)),0.0D0)
!DIR$ VECTOR ALIGNED
          DO 590 I=2,NX/2+1
            C(I)=BXYZ(I,NNYY,K)
            C(NX-I+2)=DCONJG(BXYZ(I,NNYY,K))
  590     CONTINUE
          CALL FFT235(C,D,WX,NX,LNX)
!DIR$ VECTOR ALIGNED
          DO 600 I=1,NX
            DA(I,NNYY,K)=DBLE(C(I))*DN
  600     CONTINUE
  610   CONTINUE
      END IF
      RETURN
      END
