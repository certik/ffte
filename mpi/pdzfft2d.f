C
C     FFTE: A FAST FOURIER TRANSFORM PACKAGE
C
C     (C) COPYRIGHT SOFTWARE, 2000-2004, 2008-2011, ALL RIGHTS RESERVED
C                BY
C         DAISUKE TAKAHASHI
C         FACULTY OF ENGINEERING, INFORMATION AND SYSTEMS
C         UNIVERSITY OF TSUKUBA
C         1-1-1 TENNODAI, TSUKUBA, IBARAKI 305-8573, JAPAN
C         E-MAIL: daisuke@cs.tsukuba.ac.jp
C
C
C     PARALLEL 2-D REAL-TO-COMPLEX FFT ROUTINE
C
C     FORTRAN77 + MPI SOURCE PROGRAM
C
C     CALL PDZFFT2D(A,B,NX,NY,ICOMM,ME,NPU,IOPT)
C
C     NX IS THE LENGTH OF THE TRANSFORMS IN THE X-DIRECTION (INTEGER*4)
C     NY IS THE LENGTH OF THE TRANSFORMS IN THE Y-DIRECTION (INTEGER*4)
C       ------------------------------------
C         NX = (2**IP) * (3**IQ) * (5**IR)
C         NY = (2**JP) * (3**JQ) * (5**JR)
C       ------------------------------------
C     ICOMM IS THE COMMUNICATOR (INTEGER*4)
C     ME IS THE RANK (INTEGER*4)
C     NPU IS THE NUMBER OF PROCESSORS (INTEGER*4)
C     IOPT = 0 FOR INITIALIZING THE COEFFICIENTS (INTEGER*4)
C     IOPT = -1 FOR FORWARD TRANSFORM WHERE
C              A(NX,NY/NPU) IS REAL INPUT VECTOR (REAL*8)
C!HPF$ DISTRIBUTE A(*,BLOCK)
C              B(NX/2+1,NY/NPU) IS COMPLEX OUTPUT VECTOR (COMPLEX*16)
C!HPF$ DISTRIBUTE B(*,BLOCK)
C     IOPT = -2 FOR FORWARD TRANSFORM WHERE
C              A(NX,NY/NPU) IS REAL INPUT VECTOR (REAL*8)
C!HPF$ DISTRIBUTE A(*,BLOCK)
C     ME = 0   B((NX/2)/NPU+1,NY) IS COMPLEX OUTPUT VECTOR (COMPLEX*16)
C     ME > 0   B((NX/2)/NPU,NY) IS COMPLEX OUTPUT VECTOR (COMPLEX*16)
C!HPF$ DISTRIBUTE B(BLOCK,*)
C
C     WRITTEN BY DAISUKE TAKAHASHI
C
      SUBROUTINE PDZFFT2D(A,B,NX,NY,ICOMM,ME,NPU,IOPT)
      IMPLICIT REAL*8 (A-H,O-Z)
      INCLUDE 'param.h'
      DIMENSION A(*)
      COMPLEX*16 B(*)
      COMPLEX*16 C((NDA2+NP)*NBLK),D(NDA2)
      COMPLEX*16 WX(NDA2),WY(NDA2)
      SAVE WX,WY
C
      IF (IOPT .EQ. 0) THEN
        CALL SETTBL(WX,NX)
        CALL SETTBL(WY,NY)
        RETURN
      END IF
C
!$OMP PARALLEL PRIVATE(C,D)
      CALL PDZFFT2D0(A,A,A,B,B,B,C,C,D,WX,WY,NX,NY,ICOMM,ME,NPU,IOPT)
!$OMP END PARALLEL
      RETURN
      END
      SUBROUTINE PDZFFT2D0(DA,A,AYX,B,BXY,BYX,CX,CY,D,WX,WY,NX,NY,ICOMM,
     1                     ME,NPU,IOPT)
      IMPLICIT REAL*8 (A-H,O-Z)
      INCLUDE 'mpif.h'
      INCLUDE 'param.h'
      COMPLEX*16 A(*),AYX(NY/NPU,*)
      COMPLEX*16 B(*),BXY(NX/2+1,*),BYX(NY/NPU,*)
      COMPLEX*16 CX(*),CY(NY+NP,*),D(*)
      COMPLEX*16 WX(*),WY(*)
      DIMENSION DA(NX,*)
      DIMENSION ISCNT(MAXNPU),ISDSP(MAXNPU),IRCNT(MAXNPU),IRDSP(MAXNPU)
      DIMENSION LNX(3),LNY(3)
C
      CALL FACTOR(NX,LNX)
      CALL FACTOR(NY,LNY)
C
      NNX=NX/NPU
      NNY=NY/NPU
C
      ISCNT(1)=NNY*(NNX/2+1)
      ISDSP(1)=0
      DO 10 I=2,NPU
        ISCNT(I)=NNY*(NNX/2)
        ISDSP(I)=ISDSP(I-1)+ISCNT(I-1)
   10 CONTINUE
      IF (ME .EQ. 0) THEN
        IRCNT(1)=NNY*(NNX/2+1)
        IRDSP(1)=0
        DO 20 I=2,NPU
          IRCNT(I)=NNY*(NNX/2+1)
          IRDSP(I)=IRDSP(I-1)+IRCNT(I-1)
   20   CONTINUE
      ELSE
        IRCNT(1)=NNY*(NNX/2)
        IRDSP(1)=0
        DO 30 I=2,NPU
          IRCNT(I)=NNY*(NNX/2)
          IRDSP(I)=IRDSP(I-1)+IRCNT(I-1)
   30   CONTINUE
      END IF
C
      IF (MOD(NNY,2) .EQ. 0) THEN
!$OMP DO
        DO 60 J=1,NNY,2
          DO 40 I=1,NX
            CX(I)=DCMPLX(DA(I,J),DA(I,J+1))
   40     CONTINUE
          CALL FFT235(CX,D,WX,NX,LNX)
          BYX(J,1)=DBLE(CX(1))
          BYX(J+1,1)=DIMAG(CX(1))
          DO 50 I=2,NX/2+1
            BYX(J,I)=0.5D0*(CX(I)+DCONJG(CX(NX-I+2)))
            BYX(J+1,I)=(0.0D0,-0.5D0)*(CX(I)-DCONJG(CX(NX-I+2)))
   50     CONTINUE
   60   CONTINUE
      ELSE
!$OMP DO
        DO 90 J=1,NNY-1,2
          DO 70 I=1,NX
            CX(I)=DCMPLX(DA(I,J),DA(I,J+1))
   70     CONTINUE
          CALL FFT235(CX,D,WX,NX,LNX)
          BYX(J,1)=DBLE(CX(1))
          BYX(J+1,1)=DIMAG(CX(1))
          DO 80 I=2,NX/2+1
            BYX(J,I)=0.5D0*(CX(I)+DCONJG(CX(NX-I+2)))
            BYX(J+1,I)=(0.0D0,-0.5D0)*(CX(I)-DCONJG(CX(NX-I+2)))
   80     CONTINUE
   90   CONTINUE
        DO 100 I=1,NX
          CX(I)=DCMPLX(DA(I,NNY),0.0D0)
  100   CONTINUE
        CALL FFT235(CX,D,WX,NX,LNX)
!DIR$ VECTOR ALIGNED
        DO 110 I=1,NX/2+1
          BYX(NNY,I)=CX(I)
  110   CONTINUE
      END IF
!$OMP BARRIER
!$OMP MASTER
      CALL MPI_ALLTOALLV(B,ISCNT,ISDSP,MPI_DOUBLE_COMPLEX,
     1                   A,IRCNT,IRDSP,MPI_DOUBLE_COMPLEX,
     2                   ICOMM,IERR)
!$OMP END MASTER
!$OMP BARRIER
      IF (ME .EQ. 0) THEN
!$OMP DO
        DO 180 II=1,NNX/2+1,NBLK
          DO 140 I=II,MIN0(II+NBLK-1,NNX/2+1)
            DO 130 K=1,NPU
!DIR$ VECTOR ALIGNED
              DO 120 J=1,NNY
                CY(J+(K-1)*NNY,I-II+1)=AYX(J,I+(K-1)*(NNX/2+1))
  120         CONTINUE
  130       CONTINUE
  140     CONTINUE
          DO 150 I=II,MIN0(II+NBLK-1,NNX/2+1)
            CALL FFT235(CY(1,I-II+1),D,WY,NY,LNY)
  150     CONTINUE
          DO 170 J=1,NY
!DIR$ VECTOR ALIGNED
            DO 160 I=II,MIN0(II+NBLK-1,NNX/2+1)
              B(I+(J-1)*(NNX/2+1))=CY(J,I-II+1)
  160       CONTINUE
  170     CONTINUE
  180   CONTINUE
      ELSE
!$OMP DO
        DO 250 II=1,NNX/2,NBLK
          DO 210 I=II,MIN0(II+NBLK-1,NNX/2)
            DO 200 K=1,NPU
!DIR$ VECTOR ALIGNED
              DO 190 J=1,NNY
                CY(J+(K-1)*NNY,I-II+1)=AYX(J,I+(K-1)*(NNX/2))
  190         CONTINUE
  200       CONTINUE
  210     CONTINUE
          DO 220 I=II,MIN0(II+NBLK-1,NNX/2)
            CALL FFT235(CY(1,I-II+1),D,WY,NY,LNY)
  220     CONTINUE
          DO 240 J=1,NY
!DIR$ VECTOR ALIGNED
            DO 230 I=II,MIN0(II+NBLK-1,NNX/2)
              B(I+(J-1)*(NNX/2))=CY(J,I-II+1)
  230       CONTINUE
  240     CONTINUE
  250   CONTINUE
      END IF
      IF (IOPT .EQ. -2) RETURN
!$OMP BARRIER
!$OMP MASTER
      CALL MPI_ALLTOALLV(B,IRCNT,IRDSP,MPI_DOUBLE_COMPLEX,
     1                   A,ISCNT,ISDSP,MPI_DOUBLE_COMPLEX,
     2                   ICOMM,IERR)
!$OMP END MASTER
!$OMP BARRIER
!$OMP DO
      DO 290 J=1,NNY
!DIR$ VECTOR ALIGNED
        DO 260 I=1,NNX/2+1
          BXY(I,J)=A(I+(J-1)*(NNX/2+1))
  260   CONTINUE
        DO 280 K=2,NPU
!DIR$ VECTOR ALIGNED
          DO 270 I=1,NNX/2
            BXY(I+((K-2)*(NNX/2)+(NNX/2+1)),J)
     1     =A(I+(J-1)*(NNX/2)+((K-2)*(NNX/2)+(NNX/2+1))*NNY)
  270     CONTINUE
  280   CONTINUE
  290 CONTINUE
      RETURN
      END
