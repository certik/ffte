C
C     FFTE: A FAST FOURIER TRANSFORM PACKAGE
C
C     (C) COPYRIGHT SOFTWARE, 2000-2004, 2008-2014, 2020
C         ALL RIGHTS RESERVED
C                BY
C         DAISUKE TAKAHASHI
C         CENTER FOR COMPUTATIONAL SCIENCES
C         UNIVERSITY OF TSUKUBA
C         1-1-1 TENNODAI, TSUKUBA, IBARAKI 305-8577, JAPAN
C         E-MAIL: daisuke@cs.tsukuba.ac.jp
C
C
C     PARALLEL 1-D COMPLEX FFT ROUTINE (FOR VECTOR MACHINES)
C
C     FORTRAN77 + MPI SOURCE PROGRAM
C
C     CALL PZFFT1D(A,B,W,N,ICOMM,ME,NPU,IOPT)
C
C     W(N/NPU) IS COEFFICIENT VECTOR (COMPLEX*16)
C     N IS THE LENGTH OF THE TRANSFORMS (INTEGER*8)
C       -----------------------------------
C         N = (2**IP) * (3**IQ) * (5**IR)
C       -----------------------------------
C     ICOMM IS THE COMMUNICATOR (INTEGER*4)
C     ME IS THE RANK (INTEGER*4)
C     NPU IS THE NUMBER OF PROCESSORS (INTEGER*4)
C     IOPT = 0 FOR INITIALIZING THE COEFFICIENTS (INTEGER*4)
C     IOPT = -1 FOR FORWARD TRANSFORM WHERE
C              A(N/NPU) IS COMPLEX INPUT VECTOR (COMPLEX*16)
C!HPF$ DISTRIBUTE A(BLOCK)
C              B(N/NPU) IS COMPLEX OUTPUT VECTOR (COMPLEX*16)
C!HPF$ DISTRIBUTE B(BLOCK)
C     IOPT = +1 FOR INVERSE TRANSFORM WHERE
C              A(N/NPU) IS COMPLEX INPUT VECTOR (COMPLEX*16)
C!HPF$ DISTRIBUTE A(BLOCK)
C              B(N/NPU) IS COMPLEX OUTPUT VECTOR (COMPLEX*16)
C!HPF$ DISTRIBUTE B(BLOCK)
C
C     WRITTEN BY DAISUKE TAKAHASHI
C
      SUBROUTINE PZFFT1D(A,B,W,N,ICOMM,ME,NPU,IOPT)
      IMPLICIT REAL*8 (A-H,O-Z)
      INCLUDE 'mpif.h'
      INCLUDE 'param.h'
      COMPLEX*16 A(*),B(*),W(*)
      COMPLEX*16 WX(NDA2),WY(NDA2)
      DIMENSION LNX(3),LNY(3)
      INTEGER*8 N
      SAVE WX,WY
C
      CALL PGETNXNY(N,NX,NY,NPU)
C
      NNX=NX/NPU
      NNY=NY/NPU
      NN=NX*NNY
C
      IF (IOPT .EQ. 0) THEN
        CALL SETTBL(WX,NX)
        CALL SETTBL(WY,NY)
        CALL PSETTBL(W,NX,NY,ME,NPU)
        RETURN
      END IF
C
      IF (IOPT .EQ. 1) THEN
!DIR$ VECTOR ALIGNED
        DO 10 I=1,NN
          A(I)=DCONJG(A(I))
   10   CONTINUE
      END IF
C
      CALL FACTOR(NX,LNX)
      CALL FACTOR(NY,LNY)
C
      CALL MZTRANS(A,B,NNX,NPU,NNY)
      CALL MPI_ALLTOALL(B,NN/NPU,MPI_DOUBLE_COMPLEX,A,NN/NPU,
     1                  MPI_DOUBLE_COMPLEX,ICOMM,IERR)
      CALL MFFT235A(A,B,WY,NNX,NY,LNY)
!DIR$ VECTOR ALIGNED
      DO 20 I=1,NN
        A(I)=A(I)*W(I)
   20 CONTINUE
      CALL MPI_ALLTOALL(A,NN/NPU,MPI_DOUBLE_COMPLEX,B,NN/NPU,
     1                  MPI_DOUBLE_COMPLEX,ICOMM,IERR)
      CALL ZTRANS2(B,A,NNX,NNY,NPU)
      CALL MFFT235B(A,B,WX,NNY,NX,LNX)
      CALL MPI_ALLTOALL(B,NN/NPU,MPI_DOUBLE_COMPLEX,A,NN/NPU,
     1                  MPI_DOUBLE_COMPLEX,ICOMM,IERR)
      CALL MZTRANS(A,B,NNY,NNX,NPU)
C
      IF (IOPT .EQ. 1) THEN
        DN=1.0D0/DBLE(N)
!DIR$ VECTOR ALIGNED
        DO 30 I=1,NN
          B(I)=DCONJG(B(I))*DN
   30   CONTINUE
      END IF
      RETURN
      END
      SUBROUTINE PSETTBL(W,NX,NY,ME,NPU)
      IMPLICIT REAL*8 (A-H,O-Z)
      COMPLEX*16 W(NX/NPU,*)
C
      PI2=8.0D0*DATAN(1.0D0)
      PX=-PI2/(DBLE(NX)*DBLE(NY))
      DO 20 J=1,NY
        DO 10 I=1,NX/NPU
          TEMP=PX*(DBLE(I-1)+DBLE(ME)*DBLE(NX/NPU))*DBLE(J-1)
          W(I,J)=DCMPLX(DCOS(TEMP),DSIN(TEMP))
   10   CONTINUE
   20 CONTINUE
      RETURN
      END
